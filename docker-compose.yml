services:
  # The PostgreSQL Database Service
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: freelancehub
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  users-service:
    build:
      context: .
      dockerfile: ./apps/users-service/Dockerfile
    container_name: users-service
    volumes:
      - ./apps/users-service:/app/apps/users-service
      - /app/node_modules
    command: npm run start:dev @app/users-service
    env_file:
      - apps/users-service/.env
    depends_on:
      - db
    ports:
        - '5001:5001'

#  auth-service:
#    build:
#      context: ./microservices
#      dockerfile: ./auth-service/Dockerfile
#    command: npm run dev
#    volumes:
#      - ./microservices/auth-service:/usr/src/app
#      - ./libs:/usr/src/app/libs
#      - /usr/src/app/node_modules
#    env_file:
#      - ./microservices/auth-service/.env
#    depends_on:
#      - db
#      - users-service
#
#  api-gateway:
#    build:
#      context: ./microservices
#      dockerfile: ./api-gateway/Dockerfile
#    command: npm run dev
#    ports:
#      - "5000:5000"
#    env_file:
#      - ./microservices/api-gateway/.env
#    depends_on:
#      - users-service
#      - auth-service
#
#  client:
#    build:
#      context: ./client
#      dockerfile: ./Dockerfile
#    command: npm run dev
#    volumes:
#      - ./client:/usr/src/app
#      - /usr/src/app/node_modules
#      - /usr/src/app/.next
#    env_file:
#      - ./client/.env.development
#    ports:
#      - "3000:3000"
#    depends_on:
#      - api-gateway
#
volumes:
  postgres_data: